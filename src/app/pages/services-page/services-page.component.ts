import {
  Component,
  AfterViewInit,
  ElementRef,
  ViewChildren,
  QueryList,
  Renderer2,
} from '@angular/core';
import { CommonModule } from '@angular/common';
import { TranslatePipe } from '@ngx-translate/core';
import gsap from 'gsap';
import { ModalComponent } from '../../shared/components/modal/modal.component';

interface Service {
  title: string;
  subtitle: string;
  details: string;
  features: string[];
  steps?: string[];
  technologies?: string[];
  icon: string;
  expanded?: boolean;
}

@Component({
  selector: 'app-services-page',
  standalone: true,
  imports: [CommonModule, TranslatePipe, ModalComponent],
  templateUrl: './services-page.component.html',
  styleUrls: ['./services-page.component.css'],
})
export class ServicesPageComponent implements AfterViewInit {
  isModalOpen = false;
  selectedService: Service | null = null;

  services: Service[] = [
    {
      title: 'ุชุทููุฑ ุงูููุงูุน',
      subtitle: 'ููุงูุน ุงุญุชุฑุงููุฉ ูุณุฑูุนุฉ ุงูุงุณุชุฌุงุจุฉ',
      details:
        'ูููู ุจุชุตููู ูุชุทููุฑ ููุงูุน ููุจ ุนุตุฑูุฉ ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุชูููุงุช ูุถูุงู ุฃูุถู ุชุฌุฑุจุฉ ูููุณุชุฎุฏู.',
      features: [
        'ุชุตููู ูุชุฌุงูุจ',
        'ุณุฑุนุฉ ุชุญููู ุนุงููุฉ',
        'ุฏุนู SEO',
        'ููุญุงุช ุชุญูู ูุฎุตุตุฉ',
      ],
      steps: [
        'ุชุญููู ุงููุชุทูุจุงุช',
        'ุชุตููู ุงููุงุฌูุงุช',
        'ุจุฑูุฌุฉ ุงููููุน',
        'ุงุฎุชุจุงุฑ ูุชุณููู',
      ],
      technologies: ['Angular', 'Node.js', 'TailwindCSS'],
      icon: '๐',
      expanded: false,
    },
    {
      title: 'ุชุทุจููุงุช ุงูุฌูุงู',
      subtitle: 'ุชุทุจููุงุช ุฃูุฏุฑููุฏ ูiOS ุนุงููุฉ ุงูุฌูุฏุฉ',
      details:
        'ูุทูุฑ ุชุทุจููุงุช ุฌูุงู ูุชูุงููุฉ ุชูุจู ุงุญุชูุงุฌุงุชู ูุชุนูู ุจููุงุกุฉ ุนูู ุฌููุน ุงูุฃุฌูุฒุฉ.',
      features: [
        'ุชุฌุฑุจุฉ ูุณุชุฎุฏู ุณูุณุฉ',
        'ุฏุนู ุฌููุน ุงูุฃุฌูุฒุฉ',
        'ุชูุงูู ูุน ุงูุฃูุธูุฉ ุงูุฎูููุฉ',
      ],
      steps: [
        'ุชุตููู ุชุฌุฑุจุฉ ุงููุณุชุฎุฏู',
        'ุชุทููุฑ ุงูุชุทุจูู',
        'ุงุฎุชุจุงุฑ ุนูู ุงูุฃุฌูุฒุฉ',
        'ุฑูุน ุนูู ุงููุชุงุฌุฑ',
      ],
      technologies: ['Flutter', 'React Native'],
      icon: '๐ฑ',
      expanded: false,
    },
    {
      title: 'ุชุญููู ุงูุจูุงูุงุช',
      subtitle: 'ุชุญููู ุงูุจูุงูุงุช ุฅูู ูุฑุงุฑุงุช',
      details:
        'ููุฏู ุญููู ุชุญููู ุจูุงูุงุช ูุชูุฏูุฉ ููุณุงุนุฏุชู ูู ุงุชุฎุงุฐ ูุฑุงุฑุงุช ูุจููุฉ ุนูู ูุนูููุงุช ุฏูููุฉ.',
      features: ['ุชูุงุฑูุฑ ุชูุงุนููุฉ', 'ููุญุงุช ุจูุงูุงุช ูุฎุตุตุฉ', 'ุชุญููู ุชูุจุคู'],
      technologies: ['Python', 'Power BI', 'Tableau'],
      icon: '๐',
      expanded: false,
    },
    {
      title: 'ุงูุฃูู ุงูุณูุจุฑุงูู',
      subtitle: 'ุญูุงูุฉ ุจูุงูุงุชู ูุฃุนูุงูู ูู ุงููุฎุงุทุฑ',
      details:
        'ููุฏู ุญููู ุฃูููุฉ ูุชูุงููุฉ ุชุดูู ุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงูุ ุชูููู ุงูุซุบุฑุงุชุ ูุชุฏุฑูุจ ุงูููุธููู.',
      features: [
        'ุงุฎุชุจุงุฑ ุงุฎุชุฑุงู ุงุญุชุฑุงูู',
        'ุชูููู ุงูุซุบุฑุงุช ุงูุฃูููุฉ',
        'ุชุฏุฑูุจ ุชูุนูู ููููุธููู',
        'ุงุณุชุดุงุฑุงุช ุฃูููุฉ',
      ],
      steps: [
        'ุชูููู ุงููุถุน ุงูุญุงูู',
        'ุชูููุฐ ุงูุงุฎุชุจุงุฑุงุช',
        'ุชูุฏูู ุงูุชูุงุฑูุฑ ูุงูุชูุตูุงุช',
        'ูุชุงุจุนุฉ ุงูุชุญุณููุงุช',
      ],
      technologies: ['Kali Linux', 'Burp Suite', 'OWASP'],
      icon: '๐ก๏ธ',
      expanded: false,
    },
  ];

  @ViewChildren('serviceDetails') serviceDetails!: QueryList<ElementRef>;

  constructor(private renderer: Renderer2) {}

  ngAfterViewInit() {}

  toggleDetails(index: number) {
    this.services[index].expanded = !this.services[index].expanded;
    setTimeout(() => {
      const el = this.serviceDetails.get(index)?.nativeElement;
      if (el && this.services[index].expanded) {
        this.renderer.setStyle(el, 'display', 'block');
        gsap.fromTo(
          el,
          { y: 40, opacity: 0, height: 0 },
          {
            y: 0,
            opacity: 1,
            height: 'auto',
            duration: 0.6,
            ease: 'power2.out',
          }
        );
      }
      if (el && !this.services[index].expanded) {
        gsap.to(el, {
          y: -40,
          opacity: 0,
          height: 0,
          duration: 0.5,
          ease: 'power2.in',
          onComplete: () => {
            this.renderer.setStyle(el, 'display', 'none');
          },
        });
      }
    }, 50);
  }

  openServiceDetails(index: number) {
    this.selectedService = this.services[index];
    this.isModalOpen = true;
  }
}
